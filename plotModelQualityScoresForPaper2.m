function [epipred, epifpr, epiavgdelayreduction, trigintrtpr, avgtrigdelay, untrigpmampred] = plotModelQualityScoresForPaper2(pmTrCVFeatureIndex, pmModelRes, trcvlabels, pmAMPred, plotsubfolder, basefilename, epilen, randmode)

% plotModelQualityScoresForPaper - calculates model quality scores at
% episode level and also how much earlier predictions are vs current
% clinical practice

patients = unique(pmTrCVFeatureIndex.PatientNbr);
pmAMPred = pmAMPred(ismember(pmAMPred.PatientNbr, patients),:);

[epiindex, epilabl, epipred] = convertResultsToEpisodesNew(pmTrCVFeatureIndex, trcvlabels, pmModelRes.pmNDayRes(1).Pred, epilen);

if randmode
    epilabl = epilabl(randperm(size(epilabl, 1)));
    randtext = 'Random';
else
    randtext = '';
end

[epiprecision, epirecall, epitpr, epifpr, epiprauc, epirocauc] = calcQualScores(epilabl, epipred);
[epiavgdelayreduction, trigintrtpr, avgtrigdelay] = calcAvgDelayReduction(pmAMPred, pmTrCVFeatureIndex, trcvlabels, pmModelRes.pmNDayRes(1).Pred, epipred);

% use these for label method 5/pmV3stSCfd25ff1pd10nm4nw10sf4sw2sl3rm7bf1nb2rn1vo28as1na4vs1nv4cc1pm10ps1bm1bs1np2df0dm1mvvPM1lm5
%chosenpt10pc = 203;
%chosenpt15pc = 279;
%chosenpt20pc = 352;
%chosenpt33pc = 535;
% use these for label method 6/pmV3stSCfd25ff1pd10nm4nw10sf4sw2sl3rm7bf1nb2rn1vo28as1na4vs1nv4cc1pm10ps1bm1bs1np2df0dm1mvvPM1lm6
chosenpt10pc = 202;
chosenpt15pc = 279;
%chosenpt20pc = 346;
%chosenpt20pc = 383; %actually 22.5%
%chosenpt20pc  = 326; % actually 22% use for best combination
%chosenpt20pc  = 325; % actually 22% use for best combination ex lung and just co/we
%chosenpt20pc  = 327; % actually 22% use for just we
%chosenpt20pc  = 305; % actually 22% use for just lu

chosenpt20pc = find(epifpr < 0.221, 1, 'last');

chosenpt33pc = 530;

tempthresh = sort(epipred, 'descend');
[~, ~, ~, trigintrarray] = calcAvgDelayReductionForThresh(pmAMPred, pmTrCVFeatureIndex, trcvlabels, pmModelRes.pmNDayRes(1).Pred, tempthresh(chosenpt20pc));
untrigpmampred = pmAMPred(logical(trigintrarray == -1), :);

fprintf('At %.1f%% FPR (pt %d), the Triggered Intervention TPR is %.1f%%, Avg Delay Reduction is %.1f days, and Avg Trigger Delay is %.1f days\n', ...
            100 * epifpr(chosenpt20pc), chosenpt20pc, 100 * trigintrtpr(chosenpt20pc), epiavgdelayreduction(chosenpt20pc), avgtrigdelay(chosenpt20pc));

% estimate for current clinical delay
%currclindelay = 2;

titlefontsize = 14;
labelfontsize = 12;
axisfontsize = 10;
unitfontsize = 10;
smallfontsize = 8;

widthinch = 7.5;
heightinch = 3;
name = '';
singlehght = 1/4.5;
halfhght = singlehght * 0.5;
doublehght = singlehght * 2;
twoandhalfhght = singlehght * 2.5;
triplehght = singlehght * 3;


ntitles = 1;
nplots = 3;
plotwidth  = 1/nplots;

typearray = [1, 4, 5, 6];

typehght = [singlehght, singlehght, triplehght, triplehght, triplehght, triplehght];

baseplotname1 = sprintf('%s - EpiLen %d Quality Scores for Paper 2 New %s', basefilename, epilen, randtext);

%n = 1;
%randomprec = sum(epilabl) / size(epilabl, 1);
xl = [0 100];
yl = [0 100];

[f, p] = createFigureAndPanelForPaper(name, widthinch, heightinch);

currhght = 1.0;
currplot = 1;
for i = 1:(ntitles + nplots)
    type = typearray(i);
    if type == 1 || type == 2
        % title for three plots
        currhght = currhght - typehght(type);
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [0, currhght, 1, typehght(type)]);
        displaytext = 'Triggered Interventions';
        annotation(sp(i), 'textbox',  ...
                        'String', displaytext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [0, 0, plotwidth, 1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'LineStyle', 'none', ...
                        'FontSize', labelfontsize, ...
                        'FontWeight', 'bold');
        displaytext = {'Early Warning'};
        annotation(sp(i), 'textbox',  ...
                        'String', displaytext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [plotwidth, 0, plotwidth, 1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'LineStyle', 'none', ...
                        'FontSize', labelfontsize, ...
                        'FontWeight', 'bold');
        displaytext = {'Trigger Delay'};
        annotation(sp(i), 'textbox',  ...
                        'String', displaytext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [(2 * plotwidth), 0, plotwidth, 1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'LineStyle', 'none', ...
                        'FontSize', labelfontsize, ...
                        'FontWeight', 'bold'); 
    elseif type == 4
        % Triggered Interventions ROC Curve
        currhght = currhght - typehght(type);
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [0, currhght, plotwidth, typehght(type)]);
                    
        ax = subplot(1, 1, 1, 'Parent', sp(i));
        
        area(ax, 100 * epifpr, 100 * trigintrtpr, ...
            'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);
        line(ax, [0, 100 * epifpr(chosenpt20pc)], [100 * trigintrtpr(chosenpt20pc), 100 * trigintrtpr(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        line(ax, [100 * epifpr(chosenpt20pc), 100 * epifpr(chosenpt20pc)], [0, 100 * trigintrtpr(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        
        hold on;
        scatter(ax, 100 * epifpr(chosenpt20pc), 100 * trigintrtpr(chosenpt20pc), 'Marker', 'o', ...
            'MarkerFaceColor', 'green', 'MarkerEdgeColor', 'green', 'SizeData', 18);
        hold off;
        
        ax.FontSize = axisfontsize; 
        ax.TickDir = 'out';      
        xlim(ax, xl);
        ylim(ax, yl);
        
        xlabel(ax, 'False Positive Rate (%)');
        ylabel(ax, 'True Positive Rate (%)');
        
        auc = 100 * trapz(epifpr, trigintrtpr);
        roctext = sprintf('AUC = %.1f%%', auc);
        annotation(sp(i), 'textbox',  ...
                        'String', roctext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [0.5, 0.3 0.38, 0.1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'BackgroundColor', 'white', ...
                        'LineStyle', '-', ...
                        'FontSize', axisfontsize);
    elseif type == 5
        % Reduction in treatment delay plot
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [plotwidth, currhght, plotwidth, typehght(type)]);
                    
        ax = subplot(1, 1, 1, 'Parent', sp(i));
        
        area(ax, 100 * epifpr, epiavgdelayreduction, ...
            'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);
        line(ax, [0, 100 * epifpr(chosenpt20pc)], [epiavgdelayreduction(chosenpt20pc), epiavgdelayreduction(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        line(ax, [100 * epifpr(chosenpt20pc), 100 * epifpr(chosenpt20pc)], [0, epiavgdelayreduction(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        hold on;
        
        scatter(ax, 100 * epifpr(chosenpt20pc), epiavgdelayreduction(chosenpt20pc), 'Marker', 'o', ...
            'MarkerFaceColor', 'green', 'MarkerEdgeColor', 'green', 'SizeData', 18);
        
        ax.FontSize = axisfontsize; 
        ax.TickDir = 'out';      
        xlim(ax, xl);
        %ylim(ax, yl);
        
        xlabel(ax, 'False Positive Rate (%)');
        ylabel(ax, 'Early Warning (days)');
        
        %annotation(sp(i), 'doublearrow',[epifpr(chosenpt), currclindelay ],[epifpr(chosenpt) epiavgdelayreduction(chosenpt)], 'Color', 'red' )
        %line(ax, [0, 1], [currclindelay, currclindelay], ...
        %    'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        %arrow([epifpr(chosenpt), currclindelay], [epifpr(chosenpt) epiavgdelayreduction(chosenpt)-0.2], ...
        %    'Length', 5, 'Ends', 'both', 'FaceColor', 'w', 'LineWidth', 1.0, 'EdgeColor', 'w');
        
        %delayredtext = {sprintf('Alert %.1f days earlier with', epiavgdelayreduction(chosenpt) - currclindelay); ...
        %                sprintf('false positive rate of %.0f%%', epifpr(chosenpt) * 100)};
        %annotation(sp(i), 'textbox',  ...
        %                'String', delayredtext, ...
        %                'Interpreter', 'tex', ...
        %                'Units', 'normalized', ...
        %                'Position', [0.31, 0.35, 0.52, 0.2], ...
        %                'HorizontalAlignment', 'left', ...
        %                'VerticalAlignment', 'middle', ...
        %                'BackgroundColor', 'white', ...
        %                'LineStyle', '-', ...
        %                'FontSize', smallfontsize);
        
    elseif type == 6
        % Percent of max time saved
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [(2 * plotwidth), currhght, plotwidth, typehght(type)]);
                    
        ax = subplot(1, 1, 1, 'Parent', sp(i));
        
        area(ax, 100 * epifpr, avgtrigdelay, ...
            'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);
        line(ax, [0, 100 * epifpr(chosenpt20pc)], [avgtrigdelay(chosenpt20pc), avgtrigdelay(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        line(ax, [100 * epifpr(chosenpt20pc), 100 * epifpr(chosenpt20pc)], [0, avgtrigdelay(chosenpt20pc)], ...
            'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        hold on;
        
        scatter(ax, 100 * epifpr(chosenpt20pc), avgtrigdelay(chosenpt20pc), 'Marker', 'o', ...
            'MarkerFaceColor', 'green', 'MarkerEdgeColor', 'green', 'SizeData', 18);
        
        ax.FontSize = axisfontsize; 
        ax.TickDir = 'out';      
        xlim(ax, xl);
        %ylim(ax, yl);
        
        xlabel(ax, 'False Positive Rate (%)');
        ylabel(ax, 'Delay (days)');
        
        %annotation(sp(i), 'doublearrow',[epifpr(chosenpt), currclindelay ],[epifpr(chosenpt) epiavgdelayreduction(chosenpt)], 'Color', 'red' )
        %line(ax, [0, 1], [currclindelay, currclindelay], ...
        %    'Color', 'g', 'LineStyle', '-', 'LineWidth', 1.0);
        %arrow([epifpr(chosenpt), currclindelay], [epifpr(chosenpt) epiavgdelayreduction(chosenpt)-0.2], ...
        %    'Length', 5, 'Ends', 'both', 'FaceColor', 'w', 'LineWidth', 1.0, 'EdgeColor', 'w');
        
        %delayredtext = {sprintf('Alert %.1f days earlier with', epiavgdelayreduction(chosenpt) - currclindelay); ...
        %                sprintf('false positive rate of %.0f%%', epifpr(chosenpt) * 100)};
        %annotation(sp(i), 'textbox',  ...
        %                'String', delayredtext, ...
        %                'Interpreter', 'tex', ...
        %                'Units', 'normalized', ...
        %                'Position', [0.31, 0.35, 0.52, 0.2], ...
        %                'HorizontalAlignment', 'left', ...
        %                'VerticalAlignment', 'middle', ...
        %                'BackgroundColor', 'white', ...
        %                'LineStyle', '-', ...
        %                'FontSize', smallfontsize);
       
    end
end

basedir = setBaseDir();
savePlotInDir(f, baseplotname1, basedir, plotsubfolder);
savePlotInDirAsSVG(f, baseplotname1, plotsubfolder);
close(f);

end

