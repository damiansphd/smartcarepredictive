function plotPRAndROCCurvesForPaper(mdlres, pmFeatureParamsRow, lbdisplayname, ...
    plotsubfolder, basefilename)

% plotPRAndROCCurvesForPaper - plots PR and ROC curves for the model
% results formatted as a figure for the paper

titlefontsize = 14;
labelfontsize = 12;
axisfontsize = 10;
unitfontsize = 10;

widthinch = 8.25;
heightinch = 4.5;
name = '';
singlehght = 1/3.5;
halfhght = singlehght * 0.5;
doublehght = singlehght * 2;
twoandhalfhght = singlehght * 2.5;
triplehght = (singlehght * 3) - 0.05;
plotwidth  = 1/2;

pllinewidth = 2.5;
axlinewidth = 1.5;

fontname    = 'Arial';

colarray = [188, 188, 229; ...
            196, 159, 132];
             
colarray = colarray ./ 255;

ntitles = 1;
nplots = 2;

typearray = [1, 3, 4, 5];

typehght = [halfhght, halfhght, triplehght, triplehght, triplehght];

baseplotname1 = sprintf('%s-QSfP', basefilename);

n = 1;
%[pmRandomRes] = generateRandomPRAndROCResults(pmModelRes.pmNDayRes(n).LabelSort);
randomprec = sum(mdlres.LabelSort) / size(mdlres.LabelSort, 1);
xl = [0 1];
yl = [0 1];

[f, p] = createFigureAndPanelForPaper(name, widthinch, heightinch);

currhght = 1.0;
currplot = 1;
for i = 1:(ntitles + nplots)
    type = typearray(i);
    if type == 1 || type == 2
        % title for three plots
        currhght = currhght - typehght(type);
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [0, currhght, 1, typehght(type)]);
        displaytext = 'PR Curve';
        annotation(sp(i), 'textbox',  ...
                        'String', displaytext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [0, 0, plotwidth, 1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'bottom', ...
                        'LineStyle', 'none', ...
                        'FontSize', titlefontsize, ...
                        'FontName', fontname, ...
                        'FontWeight', 'bold');
        displaytext = 'ROC Curve';
        annotation(sp(i), 'textbox',  ...
                        'String', displaytext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [plotwidth, 0, plotwidth, 1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'bottom', ...
                        'LineStyle', 'none', ...
                        'FontSize', titlefontsize, ...
                        'FontName', fontname, ...
                        'FontWeight', 'bold');
    elseif type == 3
        % PR Curve plot
        currhght = currhght - typehght(type);
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [0, currhght, plotwidth, typehght(type)]);
                    
        ax = subplot(1, 1, 1, 'Parent', sp(i));

        area(ax, mdlres.Recall, mdlres.Precision, ...
            'FaceColor', colarray(1,:), 'LineStyle', '-', 'LineWidth', pllinewidth);

        line(ax, [0, 1], [randomprec, randomprec], ...
            'Color', 'red', 'LineStyle', '-', 'LineWidth', axlinewidth);
        ax.FontSize   = axisfontsize;
        ax.FontWeight = 'bold';
        ax.FontName   = fontname;
        ax.TickDir    = 'out';   
        ax.LineWidth  = axlinewidth;
        ax.XTick  = [0, 0.2, 0.4, 0.6, 0.8, 1];
        ax.YTick  = [0, 0.2, 0.4, 0.6, 0.8, 1];
        
        xlim(ax, xl);
        ylim(ax, yl);
        
        xlabel(ax, 'Recall');
        ylabel(ax, 'Precision');

        prtext = sprintf('AUC = %.2f%%', mdlres.PRAUC);
        annotation(sp(i), 'textbox',  ...
                        'String', prtext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [0.5, 0.35, 0.38, 0.1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'BackgroundColor', 'white', ...
                        'LineStyle', 'none', ...
                        'FontWeight', 'bold', ...
                        'FontSize', titlefontsize);
        
    elseif type == 4
        % ROC Curve plot
        sp(i) = uipanel('Parent', p, ...
                        'BorderType', 'none', ...
                        'BackgroundColor', 'white', ...
                        'OuterPosition', [plotwidth, currhght, plotwidth, typehght(type)]);
                    
        ax = subplot(1, 1, 1, 'Parent', sp(i));
        
        area(ax, mdlres.FPR, mdlres.TPR, ...
            'FaceColor', colarray(2,:), 'LineStyle', '-', 'LineWidth', pllinewidth);
        %line(ax, pmRandomRes.FPR, pmRandomRes.FPR, ...
        %    'Color', 'red', 'LineStyle', '-', 'LineWidth', 1.5);
        line(ax, [0, 1], [0, 1], ...
            'Color', 'red', 'LineStyle', '-', 'LineWidth', axlinewidth);
        
        ax.FontSize   = axisfontsize;
        ax.FontWeight = 'bold';
        ax.FontName   = fontname;
        ax.TickDir    = 'out';   
        ax.LineWidth  = axlinewidth;
        ax.XTick  = [0, 0.2, 0.4, 0.6, 0.8, 1];
        ax.YTick  = [0, 0.2, 0.4, 0.6, 0.8, 1];
        
        xlim(ax, xl);
        ylim(ax, yl);
        
        xlabel(ax, 'FPR');
        ylabel(ax, 'TPR');
        
        roctext = sprintf('AUC = %.2f%%', mdlres.ROCAUC);
        annotation(sp(i), 'textbox',  ...
                        'String', roctext, ...
                        'Interpreter', 'tex', ...
                        'Units', 'normalized', ...
                        'Position', [0.5, 0.35 0.38, 0.1], ...
                        'HorizontalAlignment', 'center', ...
                        'VerticalAlignment', 'middle', ...
                        'BackgroundColor', colarray(2,:), ...
                        'LineStyle', 'none', ...
                        'FontWeight', 'bold', ...
                        'FontSize', titlefontsize);
    end
end

basedir = setBaseDir();
savePlotInDir(f, baseplotname1, basedir, plotsubfolder);
savePlotInDirAsSVG(f, baseplotname1, plotsubfolder);
close(f);

end

