function plotQCPRAndROCCurves(pmQCModelRes, plotsubfolder, basefilename)

% plotQCPRAndROCCurves - plots PR and ROC curves for the quality classifier model
% results 

axisfontsize = 10;
textboxfontsize = 8;
widthinch = 11;
heightinch = 3;
name = '';

[~, rocthreshidx] = calculateROCOpThresh(pmQCModelRes.FPR, pmQCModelRes.TPR, pmQCModelRes.PredSort);
fprintf('Inflexion point (yellow) is at index point %d with FPR %.3f%% TPR %.3f%% Precision %.3f%% Recall %.3f%% with operating threshold %.20f\n', ...
    rocthreshidx, 100 * pmQCModelRes.FPR(rocthreshidx), 100 * pmQCModelRes.TPR(rocthreshidx), ...
    100 * pmQCModelRes.Precision(rocthreshidx), 100 * pmQCModelRes.Recall(rocthreshidx), pmQCModelRes.PredSort(rocthreshidx));

fprintf('Min Cost point (green) of %.5f is at index point %d with FPR %.3f%% TPR %.3f%% Precision %.3f%% Recall %.3f%% with operating threshold %.20f\n', ...
    pmQCModelRes.QCCostOp, pmQCModelRes.IdxOp, pmQCModelRes.FPROp, pmQCModelRes.TPROp, ...
    pmQCModelRes.PrecisionOp, pmQCModelRes.RecallOp, pmQCModelRes.PredSort(pmQCModelRes.IdxOp));

baseplotname1 = sprintf('%s-PRROCCost', basefilename);

randomprec = sum(pmQCModelRes.LabelSort) / size(pmQCModelRes.LabelSort, 1);
xl = [0 1];
yl = [0 1];

[f, p] = createFigureAndPanelForPaper(name, widthinch, heightinch);

% PR curve
ax = subplot(1, 3, 1, 'Parent', p);

hold on;
area(ax, pmQCModelRes.Recall, pmQCModelRes.Precision, ...
    'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);

line(ax, [0, 1], [randomprec, randomprec], ...
    'Color', 'red', 'LineStyle', '-', 'LineWidth', 1.0);

scatter(ax, pmQCModelRes.Recall(rocthreshidx), pmQCModelRes.Precision(rocthreshidx),  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'yellow', ...
        'MarkerEdgeColor', 'black');

scatter(ax, pmQCModelRes.RecallOp/100, pmQCModelRes.PrecisionOp/100,  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'green', ...
        'MarkerEdgeColor', 'black');
    
ax.FontSize = axisfontsize; 
ax.TickDir = 'out';     
xlim(ax, xl);
ylim(ax, yl);

xlabel(ax, 'Recall');
ylabel(ax, 'Precision');

prtext = sprintf('AUC = %.2f%%\nRec Op Thresh %.2f%%\nPrec Op Thresh %.2f%%', pmQCModelRes.PRAUC, pmQCModelRes.RecallOp, pmQCModelRes.PrecisionOp);
annotation(p,   'textbox',  ...
                'String', prtext, ...
                'Interpreter', 'tex', ...
                'Units', 'normalized', ...
                'Position', [0.2, 0.2, 0.125, 0.15], ...
                'HorizontalAlignment', 'center', ...
                'VerticalAlignment', 'middle', ...
                'BackgroundColor', 'white', ...
                'LineStyle', '-', ...
                'FontSize', textboxfontsize);
hold off;

% ROC Curve
ax = subplot(1, 3, 2, 'Parent', p);

hold on;
area(ax, pmQCModelRes.FPR, pmQCModelRes.TPR, ...
    'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);

line(ax, [0, 1], [0, 1], ...
    'Color', 'red', 'LineStyle', '-', 'LineWidth', 1.0);

scatter(ax, pmQCModelRes.FPR(rocthreshidx), pmQCModelRes.TPR(rocthreshidx),  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'yellow', ...
        'MarkerEdgeColor', 'black');

scatter(ax, pmQCModelRes.FPROp/100, pmQCModelRes.TPROp/100,  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'green', ...
        'MarkerEdgeColor', 'black');

ax.FontSize = axisfontsize; 
ax.TickDir = 'out';      
xlim(ax, xl);
ylim(ax, yl);

xlabel(ax, 'FPR');
ylabel(ax, 'TPR');

roctext = sprintf('AUC = %.2f%%\nFPR Op Thresh %.2f%%\nTPR Op Thresh %.2f%%', pmQCModelRes.ROCAUC, pmQCModelRes.FPROp, pmQCModelRes.TPROp);
annotation(p, 'textbox',  ...
                'String', roctext, ...
                'Interpreter', 'tex', ...
                'Units', 'normalized', ...
                'Position', [0.49, 0.2 0.125, 0.15], ...
                'HorizontalAlignment', 'center', ...
                'VerticalAlignment', 'middle', ...
                'BackgroundColor', 'white', ...
                'LineStyle', '-', ...
                'FontSize', textboxfontsize);
hold off;

% QC Cost Curve
ax = subplot(1, 3, 3, 'Parent', p);

hold on;
area(ax, pmQCModelRes.PredSort, pmQCModelRes.QCCostArray, ...
    'FaceColor', 'blue', 'LineStyle', '-', 'LineWidth', 1.5);

line(ax, [pmQCModelRes.PredSort(pmQCModelRes.IdxOp), pmQCModelRes.PredSort(pmQCModelRes.IdxOp)], [0, max(pmQCModelRes.QCCostArray)], ...
    'Color', 'red', 'LineStyle', '-', 'LineWidth', 1.0);

scatter(ax, pmQCModelRes.PredSort(rocthreshidx), pmQCModelRes.QCCostArray(rocthreshidx),  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'yellow', ...
        'MarkerEdgeColor', 'black');

scatter(ax, pmQCModelRes.PredSort(pmQCModelRes.IdxOp), pmQCModelRes.QCCostOp,  ...
        24, 'filled', 'o', ...
        'MarkerFaceColor', 'green', ...
        'MarkerEdgeColor', 'black');
    
ax.FontSize = axisfontsize; 
ax.TickDir = 'out';      
xlim(ax, [0 1]);
ylim(ax, [0 max(pmQCModelRes.QCCostArray)]);

xlabel(ax, 'Operating Threshold');
ylabel(ax, 'QC Cost');

qccosttext = sprintf('Min Cost = %.5f\nOp Thresh %.3f', pmQCModelRes.QCCostOp, pmQCModelRes.PredSort(pmQCModelRes.IdxOp));
annotation(p, 'textbox',  ...
                'String', qccosttext, ...
                'Interpreter', 'tex', ...
                'Units', 'normalized', ...
                'Position', [0.71, 0.7 0.11, 0.15], ...
                'HorizontalAlignment', 'center', ...
                'VerticalAlignment', 'middle', ...
                'BackgroundColor', 'white', ...
                'LineStyle', '-', ...
                'FontSize', textboxfontsize);
hold off;

basedir = setBaseDir();
savePlotInDir(f, baseplotname1, basedir, plotsubfolder);
%savePlotInDirAsSVG(f, baseplotname1, plotsubfolder);
close(f);

end

